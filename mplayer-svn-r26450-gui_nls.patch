diff -urN mplayer-svn-r26450.orig/gui/interface.c mplayer-svn-r26450/gui/interface.c
--- mplayer-svn-r26450.orig/gui/interface.c	2008-01-28 01:03:56 +0200
+++ mplayer-svn-r26450/gui/interface.c	2008-04-14 23:40:25 +0300
@@ -209,7 +209,7 @@
 // --- initialize windows
  if ( ( mplDrawBuffer = malloc( appMPlayer.main.Bitmap.ImageSize ) ) == NULL )
   {
-   fprintf( stderr,MSGTR_NEMDB );
+   fprintf( stderr,_(MSGTR_NEMDB) );
    exit( 0 );
   }
 
@@ -696,7 +696,7 @@
 #endif
 	 )
 	 {
-	  gtkMessageBox( GTK_MB_FATAL,MSGTR_NEEDLAVC );
+	  gtkMessageBox( GTK_MB_FATAL,_(MSGTR_NEEDLAVC) );
 	  guiIntfStruct.Playing=0;
 	  return True;
 	 }
@@ -765,7 +765,7 @@
 	     }
 	 }
 	
-	if ( !video_driver_list && !video_driver_list[0] ) { gtkMessageBox( GTK_MB_FATAL,MSGTR_IDFGCVD ); exit_player( "gui init" ); }
+	if ( !video_driver_list && !video_driver_list[0] ) { gtkMessageBox( GTK_MB_FATAL,_(MSGTR_IDFGCVD) ); exit_player( "gui init" ); }
 
 	{
 	 int i = 0;
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/about.c mplayer-svn-r26450/gui/mplayer/gtk/about.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/about.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/about.c	2008-04-14 23:40:25 +0300
@@ -41,10 +41,10 @@
   accel_group=gtk_accel_group_new();
 
   About=gtk_window_new( GTK_WINDOW_TOPLEVEL );
-  gtk_widget_set_name( About,MSGTR_About );
-  gtk_object_set_data( GTK_OBJECT( About ),MSGTR_About,About );
+  gtk_widget_set_name( About,_(MSGTR_About) );
+  gtk_object_set_data( GTK_OBJECT( About ),_(MSGTR_About),About );
   gtk_widget_set_usize( About,340,415 );
-  gtk_window_set_title( GTK_WINDOW( About ),MSGTR_About );
+  gtk_window_set_title( GTK_WINDOW( About ),_(MSGTR_About) );
   gtk_window_set_position( GTK_WINDOW( About ),GTK_WIN_POS_CENTER );
   gtk_window_set_policy( GTK_WINDOW( About ),TRUE,FALSE,FALSE );
   gtk_window_set_wmclass( GTK_WINDOW( About ),"About","MPlayer" );
@@ -315,7 +315,7 @@
 	"\n",-1 );
 
   AddHSeparator( vbox );
-  Ok=AddButton( MSGTR_Ok,AddHButtonBox( vbox ) );
+  Ok=AddButton( _(MSGTR_Ok),AddHButtonBox( vbox ) );
 
   gtk_signal_connect( GTK_OBJECT( About ),"destroy",GTK_SIGNAL_FUNC( WidgetDestroy ),&About );
   gtk_signal_connect_object( GTK_OBJECT( Ok ),"clicked",GTK_SIGNAL_FUNC( abWidgetDestroy ),NULL );
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/eq.c mplayer-svn-r26450/gui/mplayer/gtk/eq.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/eq.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/eq.c	2008-04-14 23:40:25 +0300
@@ -86,7 +86,7 @@
  gchar * str[2];
  gtk_clist_clear( GTK_CLIST( ChannelsList ) );
  str[1]="";
- str[0]=MSGTR_EQU_All;
+ str[0]=_(MSGTR_EQU_All);
  gtk_clist_append( GTK_CLIST( ChannelsList ) ,str);
  if ( guiIntfStruct.AudioType > 1 )
   {
@@ -111,12 +111,12 @@
  if ( Equalizer ) gtkActive( Equalizer );
     else Equalizer=create_Equalizer();
 
- if ( !gtkEquChannel1 ) gtkEquChannel1=strdup( MSGTR_EQU_Front_Right );
- if ( !gtkEquChannel2 ) gtkEquChannel2=strdup( MSGTR_EQU_Front_Left );
- if ( !gtkEquChannel3 ) gtkEquChannel3=strdup( MSGTR_EQU_Back_Right );
- if ( !gtkEquChannel4 ) gtkEquChannel4=strdup( MSGTR_EQU_Back_Left );
- if ( !gtkEquChannel5 ) gtkEquChannel5=strdup( MSGTR_EQU_Center );
- if ( !gtkEquChannel6 ) gtkEquChannel6=strdup( MSGTR_EQU_Bass );
+ if ( !gtkEquChannel1 ) gtkEquChannel1=strdup( _(MSGTR_EQU_Front_Right) );
+ if ( !gtkEquChannel2 ) gtkEquChannel2=strdup( _(MSGTR_EQU_Front_Left) );
+ if ( !gtkEquChannel3 ) gtkEquChannel3=strdup( _(MSGTR_EQU_Back_Right) );
+ if ( !gtkEquChannel4 ) gtkEquChannel4=strdup( _(MSGTR_EQU_Back_Left) );
+ if ( !gtkEquChannel5 ) gtkEquChannel5=strdup( _(MSGTR_EQU_Center) );
+ if ( !gtkEquChannel6 ) gtkEquChannel6=strdup( _(MSGTR_EQU_Bass) );
 
  eqSetChannelNames();
 
@@ -262,10 +262,10 @@
   accel_group=gtk_accel_group_new();
 
   Equalizer=gtk_window_new( GTK_WINDOW_TOPLEVEL );
-  gtk_widget_set_name( Equalizer,MSGTR_Equalizer );
-  gtk_object_set_data( GTK_OBJECT( Equalizer ),MSGTR_Equalizer,Equalizer );
+  gtk_widget_set_name( Equalizer,_(MSGTR_Equalizer) );
+  gtk_object_set_data( GTK_OBJECT( Equalizer ),_(MSGTR_Equalizer),Equalizer );
   gtk_widget_set_usize( Equalizer,-1,256 );
-  gtk_window_set_title( GTK_WINDOW( Equalizer ),MSGTR_Equalizer );
+  gtk_window_set_title( GTK_WINDOW( Equalizer ),_(MSGTR_Equalizer) );
   gtk_window_set_position( GTK_WINDOW( Equalizer ),GTK_WIN_POS_CENTER );
   gtk_window_set_policy( GTK_WINDOW( Equalizer ),FALSE,FALSE,FALSE );
   gtk_window_set_wmclass( GTK_WINDOW( Equalizer ),"Equalizer","MPlayer" );
@@ -385,7 +385,7 @@
     9,10,1,2,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_notebook_set_tab_label( GTK_NOTEBOOK( Notebook ),gtk_notebook_get_nth_page( GTK_NOTEBOOK( Notebook ),0 ),
-    AddLabel( MSGTR_EQU_Audio,NULL ) );
+    AddLabel( _(MSGTR_EQU_Audio),NULL ) );
 
   table1=gtk_table_new( 4,2,FALSE );
   gtk_widget_set_name( table1,"table1" );
@@ -393,19 +393,19 @@
   gtk_container_add( GTK_CONTAINER( Notebook ),table1 );
   
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Contrast,NULL ),
+    AddLabel( _(MSGTR_EQU_Contrast),NULL ),
     0,1,0,1,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Brightness,NULL ),
+    AddLabel( _(MSGTR_EQU_Brightness),NULL ),
     0,1,1,2,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Hue,NULL ),
+    AddLabel( _(MSGTR_EQU_Hue),NULL ),
     0,1,2,3,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Saturation,NULL ),
+    AddLabel( _(MSGTR_EQU_Saturation),NULL ),
     0,1,3,4,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   VContrastadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,-100,100,1,0,0 ) );
@@ -429,7 +429,7 @@
     gtk_widget_set_usize( VSaturation,-1,45 );
 
   gtk_notebook_set_tab_label( GTK_NOTEBOOK( Notebook ),gtk_notebook_get_nth_page( GTK_NOTEBOOK( Notebook ),1 ),
-    AddLabel( MSGTR_EQU_Video,NULL ) );
+    AddLabel( _(MSGTR_EQU_Video),NULL ) );
 
   AddHSeparator( vbox1 );
 
@@ -437,9 +437,9 @@
     gtk_button_box_set_layout( GTK_BUTTON_BOX( hbuttonbox1 ),GTK_BUTTONBOX_END );
     gtk_button_box_set_spacing( GTK_BUTTON_BOX( hbuttonbox1 ),10 );
 
-  Config=AddButton( MSGTR_Config,hbuttonbox1 );
-  Clear=AddButton( MSGTR_Clear,hbuttonbox1 );
-  Ok=AddButton( MSGTR_Ok,hbuttonbox1 );
+  Config=AddButton( _(MSGTR_Config),hbuttonbox1 );
+  Clear=AddButton( _(MSGTR_Clear),hbuttonbox1 );
+  Ok=AddButton( _(MSGTR_Ok),hbuttonbox1 );
   
   gtk_widget_add_accelerator( Ok,"clicked",accel_group,GDK_Escape,0,GTK_ACCEL_VISIBLE );
   gtk_widget_add_accelerator( Ok,"clicked",accel_group,GDK_Return,0,GTK_ACCEL_VISIBLE );
@@ -502,12 +502,12 @@
  if ( EquConfig ) gtkActive( EquConfig );
     else EquConfig=create_EquConfig();
 	
- Items=g_list_append( Items,(gpointer)MSGTR_EQU_Front_Right  );
- Items=g_list_append( Items,(gpointer)MSGTR_EQU_Front_Left );
- Items=g_list_append( Items,(gpointer)MSGTR_EQU_Back_Right );
- Items=g_list_append( Items,(gpointer)MSGTR_EQU_Back_Left );
- Items=g_list_append( Items,(gpointer)MSGTR_EQU_Center );
- Items=g_list_append( Items,(gpointer)MSGTR_EQU_Bass );
+ Items=g_list_append( Items,(gpointer)_(MSGTR_EQU_Front_Right)  );
+ Items=g_list_append( Items,(gpointer)_(MSGTR_EQU_Front_Left) );
+ Items=g_list_append( Items,(gpointer)_(MSGTR_EQU_Back_Right) );
+ Items=g_list_append( Items,(gpointer)_(MSGTR_EQU_Back_Left) );
+ Items=g_list_append( Items,(gpointer)_(MSGTR_EQU_Center) );
+ Items=g_list_append( Items,(gpointer)_(MSGTR_EQU_Bass) );
  
  gtk_combo_set_popdown_strings( GTK_COMBO( CBChannel1 ),Items );
  gtk_combo_set_popdown_strings( GTK_COMBO( CBChannel2 ),Items );
@@ -566,7 +566,7 @@
   gtk_object_set_data( GTK_OBJECT( EquConfig ),"EquConfig",EquConfig );
   gtk_widget_set_usize( EquConfig,350,260 );
   GTK_WIDGET_SET_FLAGS( EquConfig,GTK_CAN_DEFAULT );
-  gtk_window_set_title( GTK_WINDOW( EquConfig ),MSGTR_ConfigureEqualizer );
+  gtk_window_set_title( GTK_WINDOW( EquConfig ),_(MSGTR_ConfigureEqualizer) );
   gtk_window_set_position( GTK_WINDOW( EquConfig ),GTK_WIN_POS_CENTER );
 //  gtk_window_set_modal( GTK_WINDOW( EquConfig ),TRUE );
   gtk_window_set_policy( GTK_WINDOW( EquConfig ),FALSE,FALSE,FALSE );
@@ -585,27 +585,27 @@
   gtk_table_set_col_spacings( GTK_TABLE( table1 ),4 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Channel1,NULL ),
+    AddLabel( _(MSGTR_EQU_Channel1),NULL ),
     0,1,0,1,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Channel2,NULL ),
+    AddLabel( _(MSGTR_EQU_Channel2),NULL ),
     0,1,1,2,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Channel3,NULL ),
+    AddLabel( _(MSGTR_EQU_Channel3),NULL ),
     0,1,2,3,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Channel4,NULL ),
+    AddLabel( _(MSGTR_EQU_Channel4),NULL ),
     0,1,3,4,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Channel5,NULL ),
+    AddLabel( _(MSGTR_EQU_Channel5),NULL ),
     0,1,4,5,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   gtk_table_attach( GTK_TABLE( table1 ),
-    AddLabel( MSGTR_EQU_Channel6,NULL ),
+    AddLabel( _(MSGTR_EQU_Channel6),NULL ),
     0,1,5,6,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   CBChannel1=AddComboBox( NULL );
@@ -656,8 +656,8 @@
     gtk_button_box_set_layout( GTK_BUTTON_BOX( hbuttonbox1 ),GTK_BUTTONBOX_END );
     gtk_button_box_set_spacing( GTK_BUTTON_BOX( hbuttonbox1 ),10 );
 
-  ecOk=AddButton( MSGTR_Ok,hbuttonbox1 );
-  ecCancel=AddButton( MSGTR_Cancel,hbuttonbox1 );
+  ecOk=AddButton( _(MSGTR_Ok),hbuttonbox1 );
+  ecCancel=AddButton( _(MSGTR_Cancel),hbuttonbox1 );
 
   gtk_widget_add_accelerator( ecOk,"clicked",accel_group,GDK_Return,0,GTK_ACCEL_VISIBLE );
   gtk_widget_add_accelerator( ecCancel,"clicked",accel_group,GDK_Escape,0,GTK_ACCEL_VISIBLE );
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/fs.c mplayer-svn-r26450/gui/mplayer/gtk/fs.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/fs.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/fs.c	2008-04-14 23:40:25 +0300
@@ -220,7 +220,7 @@
  switch ( type )
   {
    case fsVideoSelector:
-        gtk_window_set_title( GTK_WINDOW( fsFileSelect ),MSGTR_FileSelect );
+        gtk_window_set_title( GTK_WINDOW( fsFileSelect ),_(MSGTR_FileSelect) );
         fsList_items=NULL;
         for( i=0;fsVideoFilterNames[i][0];i++ )
           fsList_items=g_list_append( fsList_items,fsVideoFilterNames[i][0] );
@@ -231,7 +231,7 @@
 	tmp=guiIntfStruct.Filename;
         break;
    case fsSubtitleSelector:
-        gtk_window_set_title( GTK_WINDOW( fsFileSelect ),MSGTR_SubtitleSelect );
+        gtk_window_set_title( GTK_WINDOW( fsFileSelect ),_(MSGTR_SubtitleSelect) );
         fsList_items=NULL;
         for( i=0;fsSubtitleFilterNames[i][0];i++ )
           fsList_items=g_list_append( fsList_items,fsSubtitleFilterNames[i][0] );
@@ -242,7 +242,7 @@
 	tmp=guiIntfStruct.Subtitlename;
         break;
    case fsOtherSelector:
-        gtk_window_set_title( GTK_WINDOW( fsFileSelect ),MSGTR_OtherSelect );
+        gtk_window_set_title( GTK_WINDOW( fsFileSelect ),_(MSGTR_OtherSelect) );
         fsList_items=NULL;
         for( i=0;fsOtherFilterNames[i][0];i++ )
           fsList_items=g_list_append( fsList_items,fsOtherFilterNames[i][0] );
@@ -252,7 +252,7 @@
 	tmp=guiIntfStruct.Othername;
         break;
    case fsAudioSelector:
-	gtk_window_set_title( GTK_WINDOW( fsFileSelect ),MSGTR_AudioFileSelect );
+	gtk_window_set_title( GTK_WINDOW( fsFileSelect ),_(MSGTR_AudioFileSelect) );
 	fsList_items=NULL;
 	for( i=0;fsAudioFileNames[i][0];i++ )
 	  fsList_items=g_list_append( fsList_items,fsAudioFileNames[i][0] );
@@ -263,7 +263,7 @@
 	tmp=guiIntfStruct.AudioFile;
 	break;
    case fsFontSelector:
-        gtk_window_set_title( GTK_WINDOW( fsFileSelect ),MSGTR_FontSelect );
+        gtk_window_set_title( GTK_WINDOW( fsFileSelect ),_(MSGTR_FontSelect) );
 	fsList_items=NULL;
 	for( i=0;fsFontFileNames[i][0];i++ )
 	  fsList_items=g_list_append( fsList_items,fsFontFileNames[i][0] );
@@ -526,7 +526,7 @@
  gtk_widget_set_usize( fsFileSelect,512,300 );
  GTK_WIDGET_SET_FLAGS( fsFileSelect,GTK_CAN_DEFAULT );
  gtk_widget_set_events( fsFileSelect,GDK_EXPOSURE_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK | GDK_KEY_PRESS_MASK | GDK_KEY_RELEASE_MASK | GDK_FOCUS_CHANGE_MASK | GDK_STRUCTURE_MASK | GDK_PROPERTY_CHANGE_MASK | GDK_VISIBILITY_NOTIFY_MASK );
- gtk_window_set_title( GTK_WINDOW( fsFileSelect ),MSGTR_FileSelect );
+ gtk_window_set_title( GTK_WINDOW( fsFileSelect ),_(MSGTR_FileSelect) );
  gtk_window_set_position( GTK_WINDOW( fsFileSelect ),GTK_WIN_POS_CENTER );
  gtk_window_set_policy( GTK_WINDOW( fsFileSelect ),TRUE,TRUE,TRUE );
  gtk_window_set_wmclass( GTK_WINDOW( fsFileSelect ),"FileSelect","MPlayer" );
@@ -611,8 +611,8 @@
    gtk_button_box_set_layout( GTK_BUTTON_BOX( hbuttonbox3 ),GTK_BUTTONBOX_END );
    gtk_button_box_set_spacing( GTK_BUTTON_BOX( hbuttonbox3 ),10 );
 
- fsOk=AddButton( MSGTR_Ok,hbuttonbox3 );
- fsCancel=AddButton( MSGTR_Cancel,hbuttonbox3 );
+ fsOk=AddButton( _(MSGTR_Ok),hbuttonbox3 );
+ fsCancel=AddButton( _(MSGTR_Cancel),hbuttonbox3 );
 
  gtk_signal_connect( GTK_OBJECT( fsFileSelect ),"destroy",GTK_SIGNAL_FUNC( WidgetDestroy ),&fsFileSelect );
  gtk_signal_connect( GTK_OBJECT( fsFileSelect ),"key_release_event",GTK_SIGNAL_FUNC( on_FileSelect_key_release_event ),NULL );
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/gtk_url.c mplayer-svn-r26450/gui/mplayer/gtk/gtk_url.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/gtk_url.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/gtk_url.c	2008-04-14 23:43:21 +0300
@@ -107,7 +107,7 @@
  gtk_object_set_data( GTK_OBJECT( URL ),"URL",URL );
  gtk_widget_set_usize( URL,384,70 );
  GTK_WIDGET_SET_FLAGS( URL,GTK_CAN_DEFAULT );
- gtk_window_set_title( GTK_WINDOW( URL ),MSGTR_Network );
+ gtk_window_set_title( GTK_WINDOW( URL ),_(MSGTR_Network) );
  gtk_window_set_position( GTK_WINDOW( URL ),GTK_WIN_POS_CENTER );
  gtk_window_set_policy( GTK_WINDOW( URL ),TRUE,TRUE,FALSE );
  gtk_window_set_wmclass( GTK_WINDOW( URL ),"Network","MPlayer" );
@@ -136,8 +136,8 @@
   gtk_button_box_set_layout( GTK_BUTTON_BOX( hbuttonbox1 ),GTK_BUTTONBOX_END );
   gtk_button_box_set_spacing( GTK_BUTTON_BOX( hbuttonbox1 ),10 );
 
- Ok=AddButton( MSGTR_Ok,hbuttonbox1 );
- Cancel=AddButton( MSGTR_Cancel,hbuttonbox1 );
+ Ok=AddButton( _(MSGTR_Ok),hbuttonbox1 );
+ Cancel=AddButton( _(MSGTR_Cancel),hbuttonbox1 );
  
  gtk_widget_add_accelerator( Ok,"clicked",accel_group,GDK_Return,0,GTK_ACCEL_VISIBLE );
  gtk_widget_add_accelerator( Cancel,"clicked",accel_group,GDK_Escape,0,GTK_ACCEL_VISIBLE );
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/mb.c mplayer-svn-r26450/gui/mplayer/gtk/mb.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/mb.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/mb.c	2008-04-14 23:40:25 +0300
@@ -82,7 +82,7 @@
 
  AddHSeparator( vbox1 );
  hbuttonbox1=AddHButtonBox( vbox1 );
- Ok=AddButton( MSGTR_Ok,hbuttonbox1 );
+ Ok=AddButton( _(MSGTR_Ok),hbuttonbox1 );
 
  gtk_widget_add_accelerator( Ok,"clicked",accel_group,GDK_Return,0,GTK_ACCEL_VISIBLE );
  gtk_widget_add_accelerator( Ok,"clicked",accel_group,GDK_Escape,0,GTK_ACCEL_VISIBLE );
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/menu.c mplayer-svn-r26450/gui/mplayer/gtk/menu.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/menu.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/menu.c	2008-04-14 23:40:25 +0300
@@ -400,68 +400,68 @@
  window1 = gtk_widget_get_toplevel(Menu);
 
 
-  AddMenuItem( window1, (const char*)ab_xpm, Menu,MSGTR_MENU_AboutMPlayer"     ", evAbout );
+  AddMenuItem( window1, (const char*)ab_xpm, Menu,_(MSGTR_MENU_AboutMPlayer), evAbout );
   AddSeparator( Menu );
-   SubMenu=AddSubMenu( window1, (const char*)open_xpm, Menu,MSGTR_MENU_Open );
-    AddMenuItem( window1, (const char*)file2_xpm, SubMenu,MSGTR_MENU_PlayFile"    ", evLoadPlay );
+   SubMenu=AddSubMenu( window1, (const char*)open_xpm, Menu,_(MSGTR_MENU_Open) );
+    AddMenuItem( window1, (const char*)file2_xpm, SubMenu,_(MSGTR_MENU_PlayFile), evLoadPlay );
 #ifdef HAVE_VCD
-    AddMenuItem( window1, (const char*)playvcd_xpm, SubMenu,MSGTR_MENU_PlayVCD, evPlayVCD );
+    AddMenuItem( window1, (const char*)playvcd_xpm, SubMenu,_(MSGTR_MENU_PlayVCD), evPlayVCD );
 #endif
 #ifdef USE_DVDREAD
-    AddMenuItem( window1, (const char*)playdvd_xpm, SubMenu,MSGTR_MENU_PlayDVD, evPlayDVD );
+    AddMenuItem( window1, (const char*)playdvd_xpm, SubMenu,_(MSGTR_MENU_PlayDVD), evPlayDVD );
 #endif
-    AddMenuItem( window1, (const char*)url_xpm, SubMenu,MSGTR_MENU_PlayURL, evSetURL );
-    AddMenuItem( window1, (const char*)sub_xpm, SubMenu,MSGTR_MENU_LoadSubtitle"   ", evLoadSubtitle );
-    AddMenuItem( window1, (const char*)delsub_xpm, SubMenu,MSGTR_MENU_DropSubtitle,evDropSubtitle );
-    AddMenuItem( window1, (const char*)loadeaf_xpm, SubMenu,MSGTR_MENU_LoadExternAudioFile, evLoadAudioFile );
-   SubMenu=AddSubMenu(window1, (const char*)play_xpm, Menu,MSGTR_MENU_Playing );
-    AddMenuItem( window1, (const char*)play_xpm, SubMenu,MSGTR_MENU_Play"        ", evPlay );
-    AddMenuItem( window1, (const char*)pause_xpm, SubMenu,MSGTR_MENU_Pause, evPause );
-    AddMenuItem( window1, (const char*)stop2_xpm, SubMenu,MSGTR_MENU_Stop, evStop );
-    AddMenuItem( window1, (const char*)next_xpm, SubMenu,MSGTR_MENU_NextStream, evNext );
-    AddMenuItem( window1, (const char*)prev_xpm, SubMenu,MSGTR_MENU_PrevStream, evPrev );
+    AddMenuItem( window1, (const char*)url_xpm, SubMenu,_(MSGTR_MENU_PlayURL), evSetURL );
+    AddMenuItem( window1, (const char*)sub_xpm, SubMenu,_(MSGTR_MENU_LoadSubtitle), evLoadSubtitle );
+    AddMenuItem( window1, (const char*)delsub_xpm, SubMenu,_(MSGTR_MENU_DropSubtitle),evDropSubtitle );
+    AddMenuItem( window1, (const char*)loadeaf_xpm, SubMenu,_(MSGTR_MENU_LoadExternAudioFile), evLoadAudioFile );
+   SubMenu=AddSubMenu(window1, (const char*)play_xpm, Menu,_(MSGTR_MENU_Playing) );
+    AddMenuItem( window1, (const char*)play_xpm, SubMenu,_(MSGTR_MENU_Play), evPlay );
+    AddMenuItem( window1, (const char*)pause_xpm, SubMenu,_(MSGTR_MENU_Pause), evPause );
+    AddMenuItem( window1, (const char*)stop2_xpm, SubMenu,_(MSGTR_MENU_Stop), evStop );
+    AddMenuItem( window1, (const char*)next_xpm, SubMenu,_(MSGTR_MENU_NextStream), evNext );
+    AddMenuItem( window1, (const char*)prev_xpm, SubMenu,_(MSGTR_MENU_PrevStream), evPrev );
 //    AddSeparator( SubMenu );
 //    AddMenuItem( SubMenu,"Back 10 sec", evBackward10sec );
 //    AddMenuItem( SubMenu,"Fwd 10 sec", evForward10sec );
 //    AddMenuItem( SubMenu,"Back 1 min", evBackward1min );
 //    AddMenuItem( SubMenu,"Fwd 1 min", evForward1min );
-//   SubMenu=AddSubMenu( Menu,MSGTR_MENU_Size );
-//    AddMenuItem( SubMenu,MSGTR_MENU_NormalSize"      ", evNormalSize );
-//    AddMenuItem( SubMenu,MSGTR_MENU_DoubleSize, evDoubleSize );
-//    AddMenuItem( SubMenu,MSGTR_MENU_FullScreen, evFullScreen );
+//   SubMenu=AddSubMenu( Menu,_(MSGTR_MENU_Size) );
+//    AddMenuItem( SubMenu,_(MSGTR_MENU_NormalSize), evNormalSize );
+//    AddMenuItem( SubMenu,_(MSGTR_MENU_DoubleSize), evDoubleSize );
+//    AddMenuItem( SubMenu,_(MSGTR_MENU_FullScreen), evFullScreen );
 #ifdef HAVE_VCD
-   VCDSubMenu=AddSubMenu( window1, (const char*)vcd_xpm, Menu,MSGTR_MENU_VCD );
-    AddMenuItem( window1, (const char*)playvcd_xpm, VCDSubMenu,MSGTR_MENU_PlayDisc,evPlayVCD );
+   VCDSubMenu=AddSubMenu( window1, (const char*)vcd_xpm, Menu,_(MSGTR_MENU_VCD) );
+    AddMenuItem( window1, (const char*)playvcd_xpm, VCDSubMenu,_(MSGTR_MENU_PlayDisc),evPlayVCD );
     AddSeparator( VCDSubMenu );
-    VCDTitleMenu=AddSubMenu( window1, (const char*)title_xpm, VCDSubMenu,MSGTR_MENU_Titles );
+    VCDTitleMenu=AddSubMenu( window1, (const char*)title_xpm, VCDSubMenu,_(MSGTR_MENU_Titles) );
     if ( guiIntfStruct.VCDTracks ) 
      {
       char tmp[32]; int i;
       for ( i=0;i < guiIntfStruct.VCDTracks;i++ )
        {
-        snprintf( tmp,32,MSGTR_MENU_Title,i+1 );
+        snprintf( tmp,32,_(MSGTR_MENU_Title),i+1 );
     //AddMenuItem( VCDTitleMenu,tmp,( (i+1) << 16 ) + evSetVCDTrack );
         AddMenuItem(window1, (const char*)empty_xpm, VCDTitleMenu,tmp,( (i+1) << 16 ) + evSetVCDTrack );
        }
      }
      else
       {
-       MenuItem=AddMenuItem( window1, (const char*)empty_xpm, VCDTitleMenu,MSGTR_MENU_None,evNone );
+       MenuItem=AddMenuItem( window1, (const char*)empty_xpm, VCDTitleMenu,_(MSGTR_MENU_None),evNone );
        gtk_widget_set_sensitive( MenuItem,FALSE );
       }
 #endif
 #ifdef USE_DVDREAD
-   DVDSubMenu=AddSubMenu( window1, (const char*)dvd_xpm, Menu,MSGTR_MENU_DVD );
-    AddMenuItem( window1, (const char*)playdvd_xpm, DVDSubMenu,MSGTR_MENU_PlayDisc"    ", evPlayDVD );
-//    AddMenuItem( DVDSubMenu,MSGTR_MENU_ShowDVDMenu, evNone );
+   DVDSubMenu=AddSubMenu( window1, (const char*)dvd_xpm, Menu,_(MSGTR_MENU_DVD) );
+    AddMenuItem( window1, (const char*)playdvd_xpm, DVDSubMenu,_(MSGTR_MENU_PlayDisc), evPlayDVD );
+//    AddMenuItem( DVDSubMenu,_(MSGTR_MENU_ShowDVDMenu), evNone );
     AddSeparator( DVDSubMenu );
-    DVDTitleMenu=AddSubMenu( window1, (const char*)title_xpm, DVDSubMenu,MSGTR_MENU_Titles );
+    DVDTitleMenu=AddSubMenu( window1, (const char*)title_xpm, DVDSubMenu,_(MSGTR_MENU_Titles) );
      if ( guiIntfStruct.DVD.titles )
       {
        char tmp[32]; int i;
        for ( i=1 ; i<= guiIntfStruct.DVD.titles;i++ )
         {
-         snprintf( tmp,32,MSGTR_MENU_Title,i);
+         snprintf( tmp,32,_(MSGTR_MENU_Title),i);
          AddMenuCheckItem( window1, (const char*)empty1px_xpm, DVDTitleMenu,tmp,
 			   guiIntfStruct.DVD.current_title == i,
 			   (i << 16) + evSetDVDTitle );
@@ -469,26 +469,26 @@
       }
       else
        {
-        MenuItem=AddMenuItem( window1, (const char*)empty_xpm, DVDTitleMenu,MSGTR_MENU_None,evNone );
+        MenuItem=AddMenuItem( window1, (const char*)empty_xpm, DVDTitleMenu,_(MSGTR_MENU_None),evNone );
         gtk_widget_set_sensitive( MenuItem,FALSE );
        }
-    DVDChapterMenu=AddSubMenu( window1, (const char*)chapter_xpm, DVDSubMenu,MSGTR_MENU_Chapters );
+    DVDChapterMenu=AddSubMenu( window1, (const char*)chapter_xpm, DVDSubMenu,_(MSGTR_MENU_Chapters) );
      if ( guiIntfStruct.DVD.chapters )
       {
        char tmp[32]; int i;
        for ( i=1;i <= guiIntfStruct.DVD.chapters;i++ )
         {
-         snprintf( tmp,32,MSGTR_MENU_Chapter,i );
+         snprintf( tmp,32,_(MSGTR_MENU_Chapter),i );
          AddMenuCheckItem( window1, (const char*)empty1px_xpm, DVDChapterMenu,tmp,guiIntfStruct.DVD.current_chapter == i,
 			   ( i << 16 ) + evSetDVDChapter );
         }
       }
       else
        {
-        MenuItem=AddMenuItem( window1, (const char*)empty_xpm, DVDChapterMenu,MSGTR_MENU_None,evNone );
+        MenuItem=AddMenuItem( window1, (const char*)empty_xpm, DVDChapterMenu,_(MSGTR_MENU_None),evNone );
         gtk_widget_set_sensitive( MenuItem,FALSE );
        }
-    DVDAudioLanguageMenu=AddSubMenu( window1, (const char*)tongue_xpm, DVDSubMenu,MSGTR_MENU_AudioLanguages );
+    DVDAudioLanguageMenu=AddSubMenu( window1, (const char*)tongue_xpm, DVDSubMenu,_(MSGTR_MENU_AudioLanguages) );
      if ( guiIntfStruct.DVD.nr_of_audio_channels )
       {
        char tmp[64]; int i, id = guiIntfStruct.demuxer ? ((demuxer_t *)guiIntfStruct.demuxer)->audio->id : audio_id;
@@ -505,14 +505,14 @@
       }
       else
        {
-        MenuItem=AddMenuItem( window1, (const char*)empty_xpm, DVDAudioLanguageMenu,MSGTR_MENU_None,evNone );
+        MenuItem=AddMenuItem( window1, (const char*)empty_xpm, DVDAudioLanguageMenu,_(MSGTR_MENU_None),evNone );
         gtk_widget_set_sensitive( MenuItem,FALSE );
        }
-    DVDSubtitleLanguageMenu=AddSubMenu( window1, (const char*)tonguebla_xpm, DVDSubMenu,MSGTR_MENU_SubtitleLanguages );
+    DVDSubtitleLanguageMenu=AddSubMenu( window1, (const char*)tonguebla_xpm, DVDSubMenu,_(MSGTR_MENU_SubtitleLanguages) );
      if ( guiIntfStruct.DVD.nr_of_subtitles )
       {
        char tmp[64]; int i;
-       AddMenuItem( window1, (const char*)empty1px_xpm, DVDSubtitleLanguageMenu,MSGTR_MENU_None,( (unsigned short)-1 << 16 ) + evSetDVDSubtitle );
+       AddMenuItem( window1, (const char*)empty1px_xpm, DVDSubtitleLanguageMenu,_(MSGTR_MENU_None),( (unsigned short)-1 << 16 ) + evSetDVDSubtitle );
        for ( i=0;i < guiIntfStruct.DVD.nr_of_subtitles;i++ )
         {
 	 snprintf( tmp,64,"%s",GetLanguage( guiIntfStruct.DVD.subtitles[i].language ) );
@@ -523,15 +523,15 @@
       }
       else
        {
-        MenuItem=AddMenuItem( window1, (const char*)empty_xpm, DVDSubtitleLanguageMenu,MSGTR_MENU_None,evNone );
+        MenuItem=AddMenuItem( window1, (const char*)empty_xpm, DVDSubtitleLanguageMenu,_(MSGTR_MENU_None),evNone );
         gtk_widget_set_sensitive( MenuItem,FALSE );
        }
 #endif
 
 //  if ( guiIntfStruct.Playing )
    {
-    AspectMenu=AddSubMenu( window1, (const char*)aspect_xpm, Menu,MSGTR_MENU_AspectRatio );
-    AddMenuItem( window1, (const char*)a11_xpm, AspectMenu,MSGTR_MENU_Original,( 1 << 16 ) + evSetAspect );
+    AspectMenu=AddSubMenu( window1, (const char*)aspect_xpm, Menu,_(MSGTR_MENU_AspectRatio) );
+    AddMenuItem( window1, (const char*)a11_xpm, AspectMenu,_(MSGTR_MENU_Original),( 1 << 16 ) + evSetAspect );
     AddMenuItem( window1, (const char*)a169_xpm, AspectMenu,"16:9",( 2 << 16 ) + evSetAspect );
     AddMenuItem( window1, (const char*)a43_xpm, AspectMenu,"4:3",( 3 << 16 ) + evSetAspect );
     AddMenuItem( window1, (const char*)a235_xpm, AspectMenu,"2.35",( 4 << 16 ) + evSetAspect );
@@ -546,13 +546,13 @@
     
     if ( c > 1 )
      {
-      SubMenu=AddSubMenu( window1, (const char*)empty_xpm, Menu,MSGTR_MENU_AudioTrack );
+      SubMenu=AddSubMenu( window1, (const char*)empty_xpm, Menu,_(MSGTR_MENU_AudioTrack) );
       for ( i=0;i < MAX_A_STREAMS;i++ )
        if ( ((demuxer_t *)guiIntfStruct.demuxer)->a_streams[i] )
         {
          int aid = ((sh_audio_t *)((demuxer_t *)guiIntfStruct.demuxer)->a_streams[i])->aid;
          char tmp[32];
-         snprintf( tmp,32,MSGTR_MENU_Track,aid );
+         snprintf( tmp,32,_(MSGTR_MENU_Track),aid );
          AddMenuItem( window1, (const char*)empty_xpm, SubMenu,tmp,( aid << 16 ) + evSetAudio );
         }
      }
@@ -562,13 +562,13 @@
     
     if ( c > 1 )
      {
-      SubMenu=AddSubMenu( window1, (const char*)empty_xpm, Menu,MSGTR_MENU_VideoTrack );
+      SubMenu=AddSubMenu( window1, (const char*)empty_xpm, Menu,_(MSGTR_MENU_VideoTrack) );
       for ( i=0;i < MAX_V_STREAMS;i++ )
        if ( ((demuxer_t *)guiIntfStruct.demuxer)->v_streams[i] )
         {
          int vid = ((sh_video_t *)((demuxer_t *)guiIntfStruct.demuxer)->v_streams[i])->vid;
          char tmp[32];
-         snprintf( tmp,32,MSGTR_MENU_Track,vid );
+         snprintf( tmp,32,_(MSGTR_MENU_Track),vid );
          AddMenuItem( window1, (const char*)empty_xpm, SubMenu,tmp,( vid << 16 ) + evSetVideo );
         }
      }
@@ -578,23 +578,23 @@
   if ( global_sub_size && guiIntfStruct.StreamType != STREAMTYPE_DVD )
    {
     int i;
-    SubMenu=AddSubMenu( window1, (const char*)empty_xpm, Menu, MSGTR_MENU_Subtitles );
-    AddMenuItem( window1, (const char*)empty_xpm, SubMenu, MSGTR_MENU_None, (-1 << 16) + evSetSubtitle );
+    SubMenu=AddSubMenu( window1, (const char*)empty_xpm, Menu, _(MSGTR_MENU_Subtitles) );
+    AddMenuItem( window1, (const char*)empty_xpm, SubMenu, _(MSGTR_MENU_None), (-1 << 16) + evSetSubtitle );
     for ( i=0;i < global_sub_size;i++ )
      {
       char tmp[32];
-      snprintf( tmp, 32, MSGTR_MENU_Track, i );
+      snprintf( tmp, 32, _(MSGTR_MENU_Track), i );
       AddMenuItem( window1,(const char*)empty_xpm,SubMenu,tmp,( i << 16 ) + evSetSubtitle );
      }
    }
 
   AddSeparator( Menu );
-  MenuItem=AddMenuCheckItem( window1, (const char*)sound_xpm, Menu,MSGTR_MENU_Mute,mixer->muted,evMute );
+  MenuItem=AddMenuCheckItem( window1, (const char*)sound_xpm, Menu,_(MSGTR_MENU_Mute),mixer->muted,evMute );
   if ( !guiIntfStruct.AudioType ) gtk_widget_set_sensitive( MenuItem,FALSE );
-  AddMenuItem( window1, (const char*)pl_xpm, Menu,MSGTR_MENU_PlayList, evPlayList );
-  AddMenuItem( window1, (const char*)skin_xpm, Menu,MSGTR_MENU_SkinBrowser, evSkinBrowser );
-  AddMenuItem( window1, (const char*)prefs_xpm, Menu,MSGTR_MENU_Preferences, evPreferences );
-  AddMenuItem( window1, (const char*)eq_xpm, Menu,MSGTR_Equalizer, evEqualizer );
+  AddMenuItem( window1, (const char*)pl_xpm, Menu,_(MSGTR_MENU_PlayList), evPlayList );
+  AddMenuItem( window1, (const char*)skin_xpm, Menu,_(MSGTR_MENU_SkinBrowser), evSkinBrowser );
+  AddMenuItem( window1, (const char*)prefs_xpm, Menu,_(MSGTR_MENU_Preferences), evPreferences );
+  AddMenuItem( window1, (const char*)eq_xpm, Menu,_(MSGTR_Equalizer), evEqualizer );
 
   if ( guiIntfStruct.NoWindow == False )
    {
@@ -608,10 +608,10 @@
                 ( appMPlayer.subWindow.Height == guiIntfStruct.MovieHeight / 2 ) ) b_half=1;
       else b1=1;
      } else b1=!appMPlayer.subWindow.isFullScreen;
-    H=AddMenuCheckItem( window1, (const char*)half_xpm, Menu,MSGTR_MENU_HalfSize,b_half,evHalfSize );
-    N=AddMenuCheckItem( window1, (const char*)normal_xpm, Menu,MSGTR_MENU_NormalSize"      ",b1,evNormalSize );
-    D=AddMenuCheckItem( window1, (const char*)double_xpm, Menu,MSGTR_MENU_DoubleSize,b2,evDoubleSize );
-    F=AddMenuCheckItem( window1, (const char*)fs_xpm, Menu,MSGTR_MENU_FullScreen,appMPlayer.subWindow.isFullScreen,evFullScreen );
+    H=AddMenuCheckItem( window1, (const char*)half_xpm, Menu,_(MSGTR_MENU_HalfSize),b_half,evHalfSize );
+    N=AddMenuCheckItem( window1, (const char*)normal_xpm, Menu,_(MSGTR_MENU_NormalSize),b1,evNormalSize );
+    D=AddMenuCheckItem( window1, (const char*)double_xpm, Menu,_(MSGTR_MENU_DoubleSize),b2,evDoubleSize );
+    F=AddMenuCheckItem( window1, (const char*)fs_xpm, Menu,_(MSGTR_MENU_FullScreen),appMPlayer.subWindow.isFullScreen,evFullScreen );
   if ( !gtkShowVideoWindow && !guiIntfStruct.Playing )
    {
     gtk_widget_set_sensitive( H,FALSE );
@@ -622,7 +622,7 @@
    }
 
   AddSeparator( Menu );
-  AddMenuItem( window1, (const char*)exit_xpm, Menu,MSGTR_MENU_Exit, evExit );
+  AddMenuItem( window1, (const char*)exit_xpm, Menu,_(MSGTR_MENU_Exit), evExit );
 
  return Menu;
 }
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/opts.c mplayer-svn-r26450/gui/mplayer/gtk/opts.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/opts.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/opts.c	2008-04-14 23:44:23 +0300
@@ -301,7 +301,7 @@
    int i;
    for ( i=0;lEncoding[i].name;i++ ) 
     if ( !gstrcmp( sub_cp,lEncoding[i].name ) ) break;
-   if ( lEncoding[i].name ) lSEncoding=lEncoding[i].comment;
+   if ( lEncoding[i].name ) lSEncoding=_(lEncoding[i].comment);
    gtk_entry_set_text( GTK_ENTRY( ESubEncoding ),lSEncoding );
   }
 #endif
@@ -321,7 +321,7 @@
    int i;
    for ( i=0;lEncoding[i].name;i++ ) 
     if ( !gstrcmp( subtitle_font_encoding,lEncoding[i].name ) ) break;
-   if ( lEncoding[i].name ) lCEncoding=lEncoding[i].comment;
+   if ( lEncoding[i].name ) lCEncoding=_(lEncoding[i].comment);
    gtk_entry_set_text( GTK_ENTRY( EFontEncoding ),lCEncoding );
   }
  switch ( subtitle_autoscale )
@@ -341,7 +341,7 @@
   GList * Items = NULL;
   char  * name = NULL;
 
-  Items=g_list_append( Items,MSGTR_PREFERENCES_None );
+  Items=g_list_append( Items,_(MSGTR_PREFERENCES_None) );
   for( i=0;mpcodecs_vd_drivers[i];i++ )
    {
     Items=g_list_append( Items,(char *)mpcodecs_vd_drivers[i]->info->name );
@@ -357,7 +357,7 @@
   GList * Items = NULL;
   char  * name = NULL;
 
-  Items=g_list_append( Items,MSGTR_PREFERENCES_None );
+  Items=g_list_append( Items,_(MSGTR_PREFERENCES_None) );
   for( i=0;mpcodecs_ad_drivers[i];i++ )
    {
     Items=g_list_append( Items,(char *)mpcodecs_ad_drivers[i]->info->name );
@@ -457,7 +457,7 @@
   static int visible = 1;
   if ( visible ) 
    {
-    gtkMessageBox( GTK_MB_WARNING,MSGTR_PREFERENCES_Message );
+    gtkMessageBox( GTK_MB_WARNING,_(MSGTR_PREFERENCES_Message) );
     visible=0;
    }
  }
@@ -767,7 +767,7 @@
 	  gtk_widget_set_sensitive( AConfig,TRUE );
 #ifndef HAVE_GTK2_GUI
         if ( !strncmp( ao_driver[0],"arts",4 ) )
-          gtkMessageBox(GTK_MB_WARNING|GTK_MB_SIMPLE, MSGTR_PREFERENCES_ArtsBroken);
+          gtkMessageBox(GTK_MB_WARNING|GTK_MB_SIMPLE, _(MSGTR_PREFERENCES_ArtsBroken));
 #endif
 	break;
    case 1: // video driver 
@@ -828,7 +828,7 @@
   Preferences=gtk_window_new( GTK_WINDOW_TOPLEVEL );
   gtk_widget_set_name( Preferences,"Preferences" );
   gtk_object_set_data( GTK_OBJECT( Preferences ),"Preferences",Preferences );
-  gtk_window_set_title( GTK_WINDOW( Preferences ),MSGTR_Preferences );
+  gtk_window_set_title( GTK_WINDOW( Preferences ),_(MSGTR_Preferences) );
   gtk_window_set_position( GTK_WINDOW( Preferences ),GTK_WIN_POS_CENTER );
 //  gtk_window_set_policy( GTK_WINDOW( Preferences ),FALSE,FALSE,FALSE );
   gtk_window_set_wmclass( GTK_WINDOW( Preferences ),"Preferences","MPlayer" );
@@ -866,9 +866,9 @@
   gtk_clist_set_shadow_type( GTK_CLIST( CLADrivers ),GTK_SHADOW_NONE );
   gtk_widget_set_usize( CLADrivers,250,-2 );
   gtk_clist_set_column_widget( GTK_CLIST( CLADrivers ),0,
-    AddLabel( MSGTR_PREFERENCES_AvailableDrivers,NULL ) );
+    AddLabel( _(MSGTR_PREFERENCES_AvailableDrivers),NULL ) );
 
-  AConfig=AddButton( MSGTR_ConfigDriver,
+  AConfig=AddButton( _(MSGTR_ConfigDriver),
     AddHButtonBox( vbox2 ) );
 
   vbox3=AddVBox( 
@@ -876,28 +876,28 @@
       AddFrame( NULL,GTK_SHADOW_ETCHED_OUT,hbox1,0 ),1 ),0 );
     gtk_widget_set_usize( vbox3,250,-2 );
 
-  CBNormalize=AddCheckButton( MSGTR_PREFERENCES_NormalizeSound,vbox3 );
-  CBAudioEqualizer=AddCheckButton( MSGTR_PREFERENCES_EnableEqualizer,vbox3 );
-  CBSoftwareMixer=AddCheckButton( MSGTR_PREFERENCES_SoftwareMixer,vbox3 );
+  CBNormalize=AddCheckButton( _(MSGTR_PREFERENCES_NormalizeSound),vbox3 );
+  CBAudioEqualizer=AddCheckButton( _(MSGTR_PREFERENCES_EnableEqualizer),vbox3 );
+  CBSoftwareMixer=AddCheckButton( _(MSGTR_PREFERENCES_SoftwareMixer),vbox3 );
 #if 0
   CBSurround=AddCheckButton( "Enable surround",vbox3 );
 #endif
 
   AddHSeparator( vbox3 );
-  CBExtraStereo=AddCheckButton( MSGTR_PREFERENCES_ExtraStereo,vbox3 );
+  CBExtraStereo=AddCheckButton( _(MSGTR_PREFERENCES_ExtraStereo),vbox3 );
   hbox8=AddHBox( vbox3,1 );
-  label=AddLabel( MSGTR_PREFERENCES_Coefficient,hbox8 );
+  label=AddLabel( _(MSGTR_PREFERENCES_Coefficient),hbox8 );
 //    gtk_misc_set_padding( GTK_MISC( label ),20,0 );
   HSExtraStereoMuladj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,-10,10,0.1,0,0 ) );
   HSExtraStereoMul=AddHScaler( HSExtraStereoMuladj,hbox8,1 );
   AddHSeparator( vbox3 );
 
   hbox8=AddHBox( vbox3,1 );
-  AddLabel( MSGTR_PREFERENCES_AudioDelay,hbox8 );
+  AddLabel( _(MSGTR_PREFERENCES_AudioDelay),hbox8 );
 
   HSAudioDelayadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,-10,10,0.01,0,0 ) );
   HSAudioDelay=AddHScaler( HSAudioDelayadj,hbox8,2 );
-  label=AddLabel( MSGTR_PREFERENCES_Audio,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_Audio),NULL );
     gtk_notebook_set_tab_label( GTK_NOTEBOOK( notebook1 ),gtk_notebook_get_nth_page( GTK_NOTEBOOK( notebook1 ),0 ),label );
 
 // --- 2. page
@@ -923,32 +923,32 @@
   gtk_clist_set_shadow_type( GTK_CLIST( CLVDrivers ),GTK_SHADOW_NONE );
   gtk_widget_set_usize( CLVDrivers,250,-2 );
 
-  label=AddLabel( MSGTR_PREFERENCES_AvailableDrivers,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_AvailableDrivers),NULL );
     gtk_clist_set_column_widget( GTK_CLIST( CLVDrivers ),0,label );
 
   hbuttonbox3=AddHButtonBox( vbox4 );
-  VConfig=AddButton( MSGTR_ConfigDriver,hbuttonbox3 );
+  VConfig=AddButton( _(MSGTR_ConfigDriver),hbuttonbox3 );
 
   vbox5=AddVBox( 
     AddFrame( NULL,GTK_SHADOW_NONE,
       AddFrame( NULL,GTK_SHADOW_ETCHED_OUT,hbox2,0 ),1 ),0 );
     gtk_widget_set_usize( vbox5,250,-2 );
 
-  CBDoubleBuffer=AddCheckButton( MSGTR_PREFERENCES_DoubleBuffer,vbox5 );
-  CBDR=AddCheckButton( MSGTR_PREFERENCES_DirectRender,vbox5 );
-  CBFramedrop=AddCheckButton( MSGTR_PREFERENCES_FrameDrop,vbox5 );
-  CBHFramedrop=AddCheckButton( MSGTR_PREFERENCES_HFrameDrop,vbox5 );
-  CBFlip=AddCheckButton( MSGTR_PREFERENCES_Flip,vbox5 );
+  CBDoubleBuffer=AddCheckButton( _(MSGTR_PREFERENCES_DoubleBuffer),vbox5 );
+  CBDR=AddCheckButton( _(MSGTR_PREFERENCES_DirectRender),vbox5 );
+  CBFramedrop=AddCheckButton( _(MSGTR_PREFERENCES_FrameDrop),vbox5 );
+  CBHFramedrop=AddCheckButton( _(MSGTR_PREFERENCES_HFrameDrop),vbox5 );
+  CBFlip=AddCheckButton( _(MSGTR_PREFERENCES_Flip),vbox5 );
 
   table1=gtk_table_new( 3,2,FALSE );
   gtk_widget_set_name( table1,"table1" );
   gtk_widget_show( table1 );
   gtk_box_pack_start( GTK_BOX( vbox5 ),table1,FALSE,FALSE,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_Panscan,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_Panscan),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,0,1,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_FPS,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_FPS),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,1,2,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   HSPanscanadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,1,0.001,0,0 ) );
@@ -962,7 +962,7 @@
     gtk_spin_button_set_numeric( GTK_SPIN_BUTTON( HSFPS ),TRUE );
     gtk_table_attach( GTK_TABLE( table1 ),HSFPS,1,2,1,2,(GtkAttachOptions)( GTK_EXPAND | GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_Video,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_Video),NULL );
     gtk_notebook_set_tab_label( GTK_NOTEBOOK( notebook1 ),gtk_notebook_get_nth_page( GTK_NOTEBOOK( notebook1 ),1 ),label );
 
 // --- 3. page
@@ -971,21 +971,21 @@
 
   vbox600=AddVBox( 
     AddFrame( NULL,GTK_SHADOW_NONE,
-      AddFrame( MSGTR_PREFERENCES_FRAME_OSD_Level,GTK_SHADOW_ETCHED_OUT,vbox6,0 ),1 ),0 );
+      AddFrame( _(MSGTR_PREFERENCES_FRAME_OSD_Level),GTK_SHADOW_ETCHED_OUT,vbox6,0 ),1 ),0 );
 
-  RBOSDNone=AddRadioButton( MSGTR_PREFERENCES_None,&OSD_group,vbox600 );
-  RBOSDTandP=AddRadioButton( MSGTR_PREFERENCES_OSDTimer,&OSD_group,vbox600 );
-  RBOSDIndicator=AddRadioButton( MSGTR_PREFERENCES_OSDProgress,&OSD_group,vbox600 );
-  RBOSDTPTT=AddRadioButton( MSGTR_PREFERENCES_OSDTimerPercentageTotalTime,&OSD_group,vbox600 );
+  RBOSDNone=AddRadioButton( _(MSGTR_PREFERENCES_None),&OSD_group,vbox600 );
+  RBOSDTandP=AddRadioButton( _(MSGTR_PREFERENCES_OSDTimer),&OSD_group,vbox600 );
+  RBOSDIndicator=AddRadioButton( _(MSGTR_PREFERENCES_OSDProgress),&OSD_group,vbox600 );
+  RBOSDTPTT=AddRadioButton( _(MSGTR_PREFERENCES_OSDTimerPercentageTotalTime),&OSD_group,vbox600 );
 
   vbox7=AddVBox( 
     AddFrame( NULL,GTK_SHADOW_NONE,
-      AddFrame( MSGTR_PREFERENCES_FRAME_Subtitle,GTK_SHADOW_ETCHED_OUT,vbox6,0 ),1 ),0 );
+      AddFrame( _(MSGTR_PREFERENCES_FRAME_Subtitle),GTK_SHADOW_ETCHED_OUT,vbox6,0 ),1 ),0 );
 
 #if 0
   hbox4=AddHBox( vbox7,1 );
 
-  AddLabel( MSGTR_PREFERENCES_Subtitle,hbox4 );
+  AddLabel( _(MSGTR_PREFERENCES_Subtitle),hbox4 );
 
   ESubtitleName=gtk_entry_new();
   gtk_widget_set_name( ESubtitleName,"ESubtitleName" );
@@ -994,7 +994,7 @@
 
   hbuttonbox4=AddHButtonBox( hbuttonbox4 );
     gtk_container_set_border_width( GTK_CONTAINER( hbuttonbox4 ),3 );
-  BLoadSubtitle=AddButton( MSGTR_Browse,hbuttonbox4 );
+  BLoadSubtitle=AddButton( _(MSGTR_Browse),hbuttonbox4 );
 #endif
 
   vbox8=AddVBox( vbox7,0 );
@@ -1004,17 +1004,17 @@
   gtk_widget_show( table1 );
   gtk_box_pack_start( GTK_BOX( vbox8 ),table1,FALSE,FALSE,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_SUB_Delay,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_SUB_Delay),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,0,1,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_SUB_POS,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_SUB_POS),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,1,2,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );    
 
-  label=AddLabel( MSGTR_PREFERENCES_SUB_FPS,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_SUB_FPS),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,2,3,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
 #ifdef USE_ICONV
-  label=AddLabel( MSGTR_PREFERENCES_FontEncoding,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_FontEncoding),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,3,4,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 #endif
 
@@ -1039,10 +1039,10 @@
   gtk_widget_set_name( CBSubEncoding,"CBSubEncoding" );
   gtk_widget_show( CBSubEncoding );
   gtk_table_attach( GTK_TABLE( table1 ),CBSubEncoding,1,2,3,4,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
-  CBSubEncoding_items=g_list_append( CBSubEncoding_items,MSGTR_PREFERENCES_None );
+  CBSubEncoding_items=g_list_append( CBSubEncoding_items,_(MSGTR_PREFERENCES_None) );
   {
    int i;
-   for ( i=0;lEncoding[i].name;i++ ) CBSubEncoding_items=g_list_append( CBSubEncoding_items,lEncoding[i].comment );
+   for ( i=0;lEncoding[i].name;i++ ) CBSubEncoding_items=g_list_append( CBSubEncoding_items,_(lEncoding[i].comment) );
   }
   gtk_combo_set_popdown_strings( GTK_COMBO( CBSubEncoding ),CBSubEncoding_items );
   g_list_free( CBSubEncoding_items );
@@ -1055,32 +1055,32 @@
 
   vbox9=AddVBox( vbox8,0 );
 
-  CBSubOverlap=AddCheckButton( MSGTR_PREFERENCES_SUB_Overlap,vbox9 );
-  CBNoAutoSub=AddCheckButton( MSGTR_PREFERENCES_SUB_AutoLoad,vbox9 );
-  CBSubUnicode=AddCheckButton( MSGTR_PREFERENCES_SUB_Unicode,vbox9 );
-  CBDumpMPSub=AddCheckButton( MSGTR_PREFERENCES_SUB_MPSUB,vbox9 );
-  CBDumpSrt=AddCheckButton( MSGTR_PREFERENCES_SUB_SRT,vbox9 );
+  CBSubOverlap=AddCheckButton( _(MSGTR_PREFERENCES_SUB_Overlap),vbox9 );
+  CBNoAutoSub=AddCheckButton( _(MSGTR_PREFERENCES_SUB_AutoLoad),vbox9 );
+  CBSubUnicode=AddCheckButton( _(MSGTR_PREFERENCES_SUB_Unicode),vbox9 );
+  CBDumpMPSub=AddCheckButton( _(MSGTR_PREFERENCES_SUB_MPSUB),vbox9 );
+  CBDumpSrt=AddCheckButton( _(MSGTR_PREFERENCES_SUB_SRT),vbox9 );
 
   AddHSeparator( vbox9 );
-  CBUseASS=AddCheckButton( MSGTR_PREFERENCES_SUB_USE_ASS,vbox9 );
+  CBUseASS=AddCheckButton( _(MSGTR_PREFERENCES_SUB_USE_ASS),vbox9 );
   hbox9=AddHBox( vbox9,0 );
-  CBASSUseMargins=AddCheckButton( MSGTR_PREFERENCES_SUB_ASS_USE_MARGINS,hbox9 );
+  CBASSUseMargins=AddCheckButton( _(MSGTR_PREFERENCES_SUB_ASS_USE_MARGINS),hbox9 );
 
   hbox91=gtk_hbox_new( FALSE,0 );
   gtk_widget_set_name( hbox91,"hbox91" );
   gtk_box_pack_start( GTK_BOX( hbox9 ),hbox91,TRUE,FALSE,0 );
   gtk_widget_show( hbox91 );
-  SBASSTopMargin=AddSpinButton( MSGTR_PREFERENCES_SUB_ASS_TOP_MARGIN,
+  SBASSTopMargin=AddSpinButton( _(MSGTR_PREFERENCES_SUB_ASS_TOP_MARGIN),
 	(GtkAdjustment *)gtk_adjustment_new(0,0,512,1,8,0),hbox91 );
 
   hbox92=gtk_hbox_new( FALSE,0 );
   gtk_widget_set_name( hbox92,"hbox92" );
   gtk_box_pack_start( GTK_BOX( hbox9 ),hbox92,TRUE,FALSE,0 );
   gtk_widget_show( hbox92 );
-  SBASSBottomMargin=AddSpinButton( MSGTR_PREFERENCES_SUB_ASS_BOTTOM_MARGIN,
+  SBASSBottomMargin=AddSpinButton( _(MSGTR_PREFERENCES_SUB_ASS_BOTTOM_MARGIN),
 	(GtkAdjustment *)gtk_adjustment_new(0,0,512,1,8,0),hbox92 );
 
-  label=AddLabel( MSGTR_PREFERENCES_SubtitleOSD,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_SubtitleOSD),NULL );
     gtk_notebook_set_tab_label( GTK_NOTEBOOK( notebook1 ),gtk_notebook_get_nth_page( GTK_NOTEBOOK( notebook1 ),2 ),label );
   vbox601=AddVBox( notebook1,0 );
 
@@ -1088,36 +1088,36 @@
 
   vbox603=AddVBox( 
     AddFrame( NULL,GTK_SHADOW_NONE,
-      AddFrame( MSGTR_PREFERENCES_FRAME_Font,GTK_SHADOW_ETCHED_OUT,vbox601,0 ),1 ),0 );
+      AddFrame( _(MSGTR_PREFERENCES_FRAME_Font),GTK_SHADOW_ETCHED_OUT,vbox601,0 ),1 ),0 );
 
   hbox6=AddHBox( vbox603,1 );
-  AddLabel( MSGTR_PREFERENCES_Font,hbox6 );
+  AddLabel( _(MSGTR_PREFERENCES_Font),hbox6 );
   prEFontName=gtk_entry_new();
   gtk_widget_set_name( prEFontName,"prEFontName" );
   gtk_widget_show( prEFontName );
   gtk_box_pack_start( GTK_BOX( hbox6 ),prEFontName,TRUE,TRUE,0 );
   hbuttonbox5=AddHButtonBox( hbox6 );
     gtk_container_set_border_width( GTK_CONTAINER( hbuttonbox5 ),3 );
-  BLoadFont=AddButton( MSGTR_Browse,hbuttonbox5 );
+  BLoadFont=AddButton( _(MSGTR_Browse),hbuttonbox5 );
 
 #ifndef HAVE_FREETYPE
   hbox7=AddHBox( vbox603,1 );
-  AddLabel( MSGTR_PREFERENCES_FontFactor,hbox7 );
+  AddLabel( _(MSGTR_PREFERENCES_FontFactor),hbox7 );
   HSFontFactoradj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,10,0.05,0,0 ) );
   HSFontFactor=AddHScaler( HSFontFactoradj,hbox7,2 );
 #else
 
-  RBFontNoAutoScale=AddRadioButton( MSGTR_PREFERENCES_FontNoAutoScale,&Font_group,vbox603 );
-  RBFontAutoScaleHeight=AddRadioButton( MSGTR_PREFERENCES_FontPropHeight,&Font_group,vbox603 );
-  RBFontAutoScaleWidth=AddRadioButton( MSGTR_PREFERENCES_FontPropWidth,&Font_group,vbox603 );
-  RBFontAutoScaleDiagonal=AddRadioButton( MSGTR_PREFERENCES_FontPropDiagonal,&Font_group,vbox603 );
+  RBFontNoAutoScale=AddRadioButton( _(MSGTR_PREFERENCES_FontNoAutoScale),&Font_group,vbox603 );
+  RBFontAutoScaleHeight=AddRadioButton( _(MSGTR_PREFERENCES_FontPropHeight),&Font_group,vbox603 );
+  RBFontAutoScaleWidth=AddRadioButton( _(MSGTR_PREFERENCES_FontPropWidth),&Font_group,vbox603 );
+  RBFontAutoScaleDiagonal=AddRadioButton( _(MSGTR_PREFERENCES_FontPropDiagonal),&Font_group,vbox603 );
 
   table1=gtk_table_new( 3,2,FALSE );
   gtk_widget_set_name( table1,"table1" );
   gtk_widget_show( table1 );
   gtk_box_pack_start( GTK_BOX( vbox603 ),table1,FALSE,FALSE,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_FontEncoding,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_FontEncoding),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,0,1,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
   
   CBFontEncoding=gtk_combo_new();
@@ -1126,7 +1126,7 @@
   gtk_table_attach( GTK_TABLE( table1 ),CBFontEncoding,1,2,0,1,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
   {
    int i;
-   for ( i=0;lEncoding[i].name;i++ ) CBFontEncoding_items=g_list_append( CBFontEncoding_items,lEncoding[i].comment );
+   for ( i=0;lEncoding[i].name;i++ ) CBFontEncoding_items=g_list_append( CBFontEncoding_items,_(lEncoding[i].comment) );
   }
   gtk_combo_set_popdown_strings( GTK_COMBO( CBFontEncoding ),CBFontEncoding_items );
   g_list_free( CBFontEncoding_items );
@@ -1136,28 +1136,28 @@
   gtk_entry_set_editable( GTK_ENTRY( EFontEncoding ),FALSE );
   gtk_widget_show( EFontEncoding );
 
-  label=AddLabel( MSGTR_PREFERENCES_FontBlur,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_FontBlur),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,1,2,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   HSFontBluradj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,100,0.1,0,0 ) );
   HSFontBlur=AddHScaler( HSFontBluradj,NULL,2 );
     gtk_table_attach( GTK_TABLE( table1 ),HSFontBlur,1,2,1,2,(GtkAttachOptions)( GTK_EXPAND | GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_FontOutLine,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_FontOutLine),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,2,3,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   HSFontOutLineadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,100,0.1,0,0 ) );
   HSFontOutLine=AddHScaler( HSFontOutLineadj,NULL,2 );
     gtk_table_attach( GTK_TABLE( table1 ),HSFontOutLine,1,2,2,3,(GtkAttachOptions)( GTK_EXPAND | GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_FontTextScale,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_FontTextScale),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,3,4,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   HSFontTextScaleadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,100,0.1,0,0 ) );
   HSFontTextScale=AddHScaler( HSFontTextScaleadj,NULL,2 );
     gtk_table_attach( GTK_TABLE( table1 ),HSFontTextScale,1,2,3,4,(GtkAttachOptions)( GTK_EXPAND | GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_FontOSDScale,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_FontOSDScale),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,4,5,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
   HSFontOSDScaleadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,100,0.1,0,0 ) );
@@ -1165,7 +1165,7 @@
     gtk_table_attach( GTK_TABLE( table1 ),HSFontOSDScale,1,2,4,5,(GtkAttachOptions)( GTK_EXPAND | GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 #endif
 
-  label=AddLabel( MSGTR_PREFERENCES_FRAME_Font,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_FRAME_Font),NULL );
     gtk_notebook_set_tab_label( GTK_NOTEBOOK( notebook1 ),gtk_notebook_get_nth_page( GTK_NOTEBOOK( notebook1 ),3 ),label );
 
 // --- 5. page
@@ -1174,14 +1174,14 @@
 
   vbox602=AddVBox( 
     AddFrame( NULL,GTK_SHADOW_NONE,
-      AddFrame( MSGTR_PREFERENCES_FRAME_CodecDemuxer,GTK_SHADOW_ETCHED_OUT,vbox601,0 ),1 ),0 );
+      AddFrame( _(MSGTR_PREFERENCES_FRAME_CodecDemuxer),GTK_SHADOW_ETCHED_OUT,vbox601,0 ),1 ),0 );
 
-  CBNonInterlaved=AddCheckButton( MSGTR_PREFERENCES_NI,vbox602 );
-  CBIndex=AddCheckButton( MSGTR_PREFERENCES_IDX,vbox602 );
+  CBNonInterlaved=AddCheckButton( _(MSGTR_PREFERENCES_NI),vbox602 );
+  CBIndex=AddCheckButton( _(MSGTR_PREFERENCES_IDX),vbox602 );
 
   hbox5=AddHBox( vbox602,1 );
 
-  AddLabel( MSGTR_PREFERENCES_VideoCodecFamily,hbox5 );
+  AddLabel( _(MSGTR_PREFERENCES_VideoCodecFamily),hbox5 );
 
   CBVFM=gtk_combo_new();
   gtk_widget_set_name( CBVFM,"CBVFM" );
@@ -1195,7 +1195,7 @@
 
   hbox5=AddHBox( vbox602,1 );
 
-  AddLabel( MSGTR_PREFERENCES_AudioCodecFamily,hbox5 );
+  AddLabel( _(MSGTR_PREFERENCES_AudioCodecFamily),hbox5 );
 
   CBAFM=gtk_combo_new();
   gtk_widget_set_name( CBAFM,"CBAFM" );
@@ -1207,7 +1207,7 @@
   gtk_entry_set_editable( GTK_ENTRY( EAFM ),FALSE );
   gtk_widget_show( EAFM );
 
-  label=AddLabel( MSGTR_PREFERENCES_Codecs,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_Codecs),NULL );
     gtk_notebook_set_tab_label( GTK_NOTEBOOK( notebook1 ),gtk_notebook_get_nth_page( GTK_NOTEBOOK( notebook1 ),4 ),label );
 
   vbox601=AddVBox( notebook1,0 );
@@ -1216,13 +1216,13 @@
 
   vbox602=AddVBox( 
     AddFrame( NULL,GTK_SHADOW_NONE,
-      AddFrame( MSGTR_PREFERENCES_FRAME_PostProcess,GTK_SHADOW_ETCHED_OUT,vbox601,0 ),1 ),0 );
+      AddFrame( _(MSGTR_PREFERENCES_FRAME_PostProcess),GTK_SHADOW_ETCHED_OUT,vbox601,0 ),1 ),0 );
 
-  CBPostprocess=AddCheckButton( MSGTR_PREFERENCES_PostProcess,vbox602 );
+  CBPostprocess=AddCheckButton( _(MSGTR_PREFERENCES_PostProcess),vbox602 );
 
   hbox5=AddHBox( vbox602,1 );
 
-  AddLabel( MSGTR_PREFERENCES_AutoQuality,hbox5 );
+  AddLabel( _(MSGTR_PREFERENCES_AutoQuality),hbox5 );
 
   if ( guiIntfStruct.sh_video && guiIntfStruct.Playing ) HSPPQualityadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,get_video_quality_max( guiIntfStruct.sh_video ),0,0,0 ) );
    else HSPPQualityadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,100,0,0,0 ) );
@@ -1230,13 +1230,13 @@
 
   vbox602=AddVBox( 
     AddFrame( NULL,GTK_SHADOW_NONE,
-      AddFrame( MSGTR_PREFERENCES_FRAME_Cache,GTK_SHADOW_ETCHED_OUT,vbox601,0 ),1 ),0 );
+      AddFrame( _(MSGTR_PREFERENCES_FRAME_Cache),GTK_SHADOW_ETCHED_OUT,vbox601,0 ),1 ),0 );
 
-  CBCache=AddCheckButton( MSGTR_PREFERENCES_Cache,vbox602 );
+  CBCache=AddCheckButton( _(MSGTR_PREFERENCES_Cache),vbox602 );
   
   hbox5=AddHBox( vbox602,1 );
 
-  AddLabel( MSGTR_PREFERENCES_CacheSize,hbox5 );
+  AddLabel( _(MSGTR_PREFERENCES_CacheSize),hbox5 );
 
   SBCacheadj=GTK_ADJUSTMENT( gtk_adjustment_new( 2048,4,65535,1,10,10 ) );
   SBCache=gtk_spin_button_new( GTK_ADJUSTMENT( SBCacheadj ),1,0 );
@@ -1245,19 +1245,19 @@
 
   vbox602=AddVBox( 
     AddFrame( NULL,GTK_SHADOW_NONE,
-      AddFrame( MSGTR_PREFERENCES_FRAME_Misc,GTK_SHADOW_ETCHED_OUT,vbox601,1 ),1 ),0 );
+      AddFrame( _(MSGTR_PREFERENCES_FRAME_Misc),GTK_SHADOW_ETCHED_OUT,vbox601,1 ),1 ),0 );
 
-  CBShowVideoWindow=AddCheckButton( MSGTR_PREFERENCES_ShowVideoWindow,vbox602 );
-  CBLoadFullscreen=AddCheckButton( MSGTR_PREFERENCES_LoadFullscreen,vbox602 );
-  CBSaveWinPos=AddCheckButton( MSGTR_PREFERENCES_SaveWinPos,vbox602 );
-  CBStopXScreenSaver=AddCheckButton( MSGTR_PREFERENCES_XSCREENSAVER,vbox602 );
-  CBPlayBar=AddCheckButton( MSGTR_PREFERENCES_PlayBar,vbox602 );
+  CBShowVideoWindow=AddCheckButton( _(MSGTR_PREFERENCES_ShowVideoWindow),vbox602 );
+  CBLoadFullscreen=AddCheckButton( _(MSGTR_PREFERENCES_LoadFullscreen),vbox602 );
+  CBSaveWinPos=AddCheckButton( _(MSGTR_PREFERENCES_SaveWinPos),vbox602 );
+  CBStopXScreenSaver=AddCheckButton( _(MSGTR_PREFERENCES_XSCREENSAVER),vbox602 );
+  CBPlayBar=AddCheckButton( _(MSGTR_PREFERENCES_PlayBar),vbox602 );
 
   AddHSeparator( vbox602 );
 
-  CBAutoSync=AddCheckButton( MSGTR_PREFERENCES_AutoSync,vbox602 );
+  CBAutoSync=AddCheckButton( _(MSGTR_PREFERENCES_AutoSync),vbox602 );
   hbox5=AddHBox( vbox602,1 );
-  AddLabel( MSGTR_PREFERENCES_AutoSyncValue,hbox5 );
+  AddLabel( _(MSGTR_PREFERENCES_AutoSyncValue),hbox5 );
   SBAutoSyncadj=GTK_ADJUSTMENT( gtk_adjustment_new( 0,0,10000,1,10,10 ) );
   SBAutoSync=gtk_spin_button_new( GTK_ADJUSTMENT( SBAutoSyncadj ),1,0 );
   gtk_widget_show( SBAutoSync );
@@ -1270,14 +1270,14 @@
     gtk_widget_show( table1 );
     gtk_box_pack_start( GTK_BOX( vbox602 ),table1,FALSE,FALSE,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_DVDDevice,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_DVDDevice),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,0,1,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
   prEDVDDevice=gtk_entry_new();
     gtk_widget_set_name( prEDVDDevice,"prEDVDDevice" );
     gtk_widget_show( prEDVDDevice );
     gtk_table_attach( GTK_TABLE( table1 ),prEDVDDevice,1,2,0,1,(GtkAttachOptions)( GTK_EXPAND | GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
 
-  label=AddLabel( MSGTR_PREFERENCES_CDROMDevice,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_CDROMDevice),NULL );
     gtk_table_attach( GTK_TABLE( table1 ),label,0,1,1,2,(GtkAttachOptions)( GTK_FILL ),(GtkAttachOptions)( 0 ),0,0 );
   prECDRomDevice=gtk_entry_new();
     gtk_widget_set_name( prECDRomDevice,"prECDRomDevice" );
@@ -1286,7 +1286,7 @@
 
 //  AddHSeparator( vbox602 );
 
-  label=AddLabel( MSGTR_PREFERENCES_Misc,NULL );
+  label=AddLabel( _(MSGTR_PREFERENCES_Misc),NULL );
     gtk_notebook_set_tab_label( GTK_NOTEBOOK( notebook1 ),gtk_notebook_get_nth_page( GTK_NOTEBOOK( notebook1 ),5 ),label );
 
 // ---
@@ -1296,8 +1296,8 @@
   hbuttonbox1=AddHButtonBox( vbox1 );
     gtk_button_box_set_layout( GTK_BUTTON_BOX( hbuttonbox1 ),GTK_BUTTONBOX_END );
     gtk_button_box_set_spacing( GTK_BUTTON_BOX( hbuttonbox1 ),10 );
-  BOk=AddButton( MSGTR_Ok,hbuttonbox1 );
-  BCancel=AddButton( MSGTR_Cancel,hbuttonbox1 );
+  BOk=AddButton( _(MSGTR_Ok),hbuttonbox1 );
+  BCancel=AddButton( _(MSGTR_Cancel),hbuttonbox1 );
   
   gtk_widget_add_accelerator( BOk,"clicked",accel_group,GDK_Return,0,GTK_ACCEL_VISIBLE );
   gtk_widget_add_accelerator( BCancel,"clicked",accel_group,GDK_Escape,0,GTK_ACCEL_VISIBLE );
@@ -1457,7 +1457,7 @@
 // MSGTR_PREFERENCES_DriverDefault as null string.
 const char *getGtkEntryText(GtkWidget *from) {
   const char *tmp = gtk_entry_get_text(GTK_ENTRY(from));
-  if (strcmp(tmp, MSGTR_PREFERENCES_DriverDefault) == 0) {
+  if (strcmp(tmp, _(MSGTR_PREFERENCES_DriverDefault)) == 0) {
     tmp = NULL;
   }
   return tmp;
@@ -1467,7 +1467,7 @@
 // null string as MSGTR_PREFERENCES_DriverDefault.
 void setGtkEntryText(GtkWidget *dest, char *to) {
   if (!to) {
-    to = MSGTR_PREFERENCES_DriverDefault;
+    to = _(MSGTR_PREFERENCES_DriverDefault);
   }
   gtk_entry_set_text(GTK_ENTRY(dest),to);
 }
@@ -1574,7 +1574,7 @@
   AudioConfig = gtk_window_new(GTK_WINDOW_TOPLEVEL);
   gtk_widget_set_name(AudioConfig, "AudioConfig");
   gtk_object_set_data(GTK_OBJECT(AudioConfig), "AudioConfig", AudioConfig);
-  gtk_window_set_title(GTK_WINDOW(AudioConfig), MSGTR_AudioPreferences);
+  gtk_window_set_title(GTK_WINDOW(AudioConfig), _(MSGTR_AudioPreferences));
   gtk_window_set_position(GTK_WINDOW(AudioConfig), GTK_WIN_POS_CENTER);
   gtk_window_set_policy(GTK_WINDOW(AudioConfig), FALSE, FALSE, FALSE);
   gtk_window_set_wmclass(GTK_WINDOW(AudioConfig), "Audio Config", "MPlayer");
@@ -1589,12 +1589,12 @@
   gtk_widget_show(table);
   gtk_box_pack_start(GTK_BOX(vbox), table, TRUE, TRUE, 0);
 
-  label = AddLabel(MSGTR_PREFERENCES_Audio_Device, NULL);
+  label = AddLabel(_(MSGTR_PREFERENCES_Audio_Device), NULL);
   gtk_table_attach(GTK_TABLE(table), label, 0, 1, 0, 1, (GtkAttachOptions)(GTK_FILL), (GtkAttachOptions)(0), 0, 0);
 
   CBAudioDevice = AddComboBox(NULL);
   gtk_table_attach(GTK_TABLE(table), CBAudioDevice, 1, 2, 0, 1, (GtkAttachOptions)(GTK_EXPAND | GTK_FILL), (GtkAttachOptions)(0), 0, 0);
-  items = g_list_append(items,(gpointer)MSGTR_PREFERENCES_DriverDefault);
+  items = g_list_append(items,(gpointer)_(MSGTR_PREFERENCES_DriverDefault));
 #ifdef USE_OSS_AUDIO
   if (strncmp(ao_driver[0], "oss", 3) == 0)
     items = appendOSSDevices(items);
@@ -1619,12 +1619,12 @@
   gtk_widget_set_name(CEAudioDevice, "CEAudioDevice");
   gtk_widget_show(CEAudioDevice);
 
-  label = AddLabel(MSGTR_PREFERENCES_Audio_Mixer, NULL);
+  label = AddLabel(_(MSGTR_PREFERENCES_Audio_Mixer), NULL);
   gtk_table_attach(GTK_TABLE(table), label, 0, 1, 1, 2, (GtkAttachOptions)(GTK_FILL), (GtkAttachOptions)(0), 0, 0);
 
   CBAudioMixer = AddComboBox(NULL);
   gtk_table_attach(GTK_TABLE(table), CBAudioMixer, 1, 2, 1, 2, (GtkAttachOptions)(GTK_EXPAND | GTK_FILL), (GtkAttachOptions)(0), 0, 0);
-  items = g_list_append(items, (gpointer)MSGTR_PREFERENCES_DriverDefault);
+  items = g_list_append(items, (gpointer)_(MSGTR_PREFERENCES_DriverDefault));
 #ifdef USE_OSS_AUDIO
   if (strncmp(ao_driver[0], "oss", 3) == 0)
     items = appendOSSMixers(items);
@@ -1641,12 +1641,12 @@
   gtk_widget_set_name(CEAudioMixer, "CEAudioMixer");
   gtk_widget_show(CEAudioMixer);
 
-  label = AddLabel(MSGTR_PREFERENCES_Audio_MixerChannel, NULL);
+  label = AddLabel(_(MSGTR_PREFERENCES_Audio_MixerChannel), NULL);
   gtk_table_attach(GTK_TABLE(table), label, 0, 1, 2, 3, (GtkAttachOptions)(GTK_FILL), (GtkAttachOptions)(0), 0, 0);
 
   CBAudioMixerChannel = AddComboBox(NULL);
   gtk_table_attach(GTK_TABLE(table), CBAudioMixerChannel, 1, 2, 2, 3, (GtkAttachOptions)(GTK_EXPAND | GTK_FILL), (GtkAttachOptions)(0), 0, 0);
-  items = g_list_append(items, (gpointer)MSGTR_PREFERENCES_DriverDefault);
+  items = g_list_append(items, (gpointer)_(MSGTR_PREFERENCES_DriverDefault));
 #ifdef USE_OSS_AUDIO
   if (strncmp(ao_driver[0], "oss", 3) == 0)
     items = appendOSSMixerChannels(items);
@@ -1668,8 +1668,8 @@
   hbuttonbox = AddHButtonBox(vbox);
   gtk_button_box_set_layout(GTK_BUTTON_BOX(hbuttonbox), GTK_BUTTONBOX_END);
   gtk_button_box_set_spacing(GTK_BUTTON_BOX(hbuttonbox), 10);
-  BAudioOk = AddButton(MSGTR_Ok, hbuttonbox);
-  BAudioCancel = AddButton(MSGTR_Cancel, hbuttonbox);
+  BAudioOk = AddButton(_(MSGTR_Ok), hbuttonbox);
+  BAudioCancel = AddButton(_(MSGTR_Cancel), hbuttonbox);
 
   gtk_signal_connect(GTK_OBJECT(AudioConfig), "destroy", GTK_SIGNAL_FUNC(WidgetDestroy), &AudioConfig);
   gtk_signal_connect(GTK_OBJECT(BAudioOk), "clicked", GTK_SIGNAL_FUNC(audioButton), (void*)1);
@@ -1766,7 +1766,7 @@
  vbox1=AddVBox( AddDialogFrame( DXR3Config ),0 );
  vbox2=AddVBox( vbox1,0 );
  hbox1=AddHBox( vbox2,1 );
- AddLabel( MSGTR_PREFERENCES_Audio_Device,hbox1 );
+ AddLabel( _(MSGTR_PREFERENCES_Audio_Device),hbox1 );
 
  CBDevice=AddComboBox( hbox1 );
 
@@ -1786,9 +1786,9 @@
 #ifdef USE_LIBAVCODEC
  AddHSeparator( vbox2 );
  vbox3=AddVBox( vbox2,0 );
- AddLabel( MSGTR_PREFERENCES_DXR3_VENC,vbox3 );
- RBVNone=AddRadioButton( MSGTR_PREFERENCES_None,&VEncoder_group,vbox3 );
- RBVLavc=AddRadioButton( MSGTR_PREFERENCES_DXR3_LAVC,&VEncoder_group,vbox3 );
+ AddLabel( _(MSGTR_PREFERENCES_DXR3_VENC),vbox3 );
+ RBVNone=AddRadioButton( _(MSGTR_PREFERENCES_None),&VEncoder_group,vbox3 );
+ RBVLavc=AddRadioButton( _(MSGTR_PREFERENCES_DXR3_LAVC),&VEncoder_group,vbox3 );
 #endif
 
  AddHSeparator( vbox1 );
@@ -1796,8 +1796,8 @@
  hbuttonbox1=AddHButtonBox( vbox1 );
    gtk_button_box_set_layout( GTK_BUTTON_BOX( hbuttonbox1 ),GTK_BUTTONBOX_END );
    gtk_button_box_set_spacing( GTK_BUTTON_BOX( hbuttonbox1 ),10 );
- dxr3BOk=AddButton( MSGTR_Ok,hbuttonbox1 );
- dxr3BCancel=AddButton( MSGTR_Cancel,hbuttonbox1 );
+ dxr3BOk=AddButton( _(MSGTR_Ok),hbuttonbox1 );
+ dxr3BCancel=AddButton( _(MSGTR_Cancel),hbuttonbox1 );
 
  gtk_widget_add_accelerator( dxr3BOk,"clicked",accel_group,GDK_Return,0,GTK_ACCEL_VISIBLE );
  gtk_widget_add_accelerator( dxr3BCancel,"clicked",accel_group,GDK_Escape,0,GTK_ACCEL_VISIBLE );
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/pl.c mplayer-svn-r26450/gui/mplayer/gtk/pl.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/pl.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/pl.c	2008-04-14 23:40:25 +0300
@@ -412,7 +412,7 @@
   PlayList=gtk_window_new( GTK_WINDOW_TOPLEVEL );
   gtk_object_set_data( GTK_OBJECT( PlayList ),"PlayList",PlayList );
   gtk_widget_set_usize( PlayList,512,384 );
-  gtk_window_set_title( GTK_WINDOW( PlayList ),MSGTR_PlayList );
+  gtk_window_set_title( GTK_WINDOW( PlayList ),_(MSGTR_PlayList) );
   gtk_window_set_position( GTK_WINDOW( PlayList ),GTK_WIN_POS_CENTER );
 //  gtk_window_set_policy( GTK_WINDOW( PlayList ),FALSE,FALSE,FALSE );
   gtk_window_set_wmclass( GTK_WINDOW( PlayList ),"Playlist","MPlayer" );
@@ -454,7 +454,7 @@
 
   
   gtk_clist_set_column_widget( GTK_CLIST( CTDirTree ),0,
-    AddLabel( MSGTR_PLAYLIST_DirectoryTree,NULL ) );
+    AddLabel( _(MSGTR_PLAYLIST_DirectoryTree),NULL ) );
   
   vbox2=AddVBox(
     AddFrame( NULL,1,hbox1,1 ),0 );
@@ -473,7 +473,7 @@
   gtk_clist_set_shadow_type( GTK_CLIST( CLFiles ),GTK_SHADOW_NONE );
 
   gtk_clist_set_column_widget( GTK_CLIST( CLFiles ),0,
-    AddLabel( MSGTR_PLAYLIST_Files,NULL ) );
+    AddLabel( _(MSGTR_PLAYLIST_Files),NULL ) );
 
   AddHSeparator( vbox2 );
 
@@ -492,10 +492,10 @@
   gtk_clist_set_shadow_type( GTK_CLIST( CLSelected ),GTK_SHADOW_NONE );
 
   gtk_clist_set_column_widget( GTK_CLIST( CLSelected ),0,
-    AddLabel( MSGTR_PLAYLIST_Selected,NULL ) );
+    AddLabel( _(MSGTR_PLAYLIST_Selected),NULL ) );
 
   gtk_clist_set_column_widget( GTK_CLIST( CLSelected ),1,
-    AddLabel( MSGTR_PLAYLIST_Path,NULL ) );
+    AddLabel( _(MSGTR_PLAYLIST_Path),NULL ) );
 
   AddHSeparator( vbox1 );
 
@@ -503,10 +503,10 @@
     gtk_button_box_set_layout( GTK_BUTTON_BOX( hbuttonbox1 ),GTK_BUTTONBOX_END );
     gtk_button_box_set_spacing( GTK_BUTTON_BOX( hbuttonbox1 ),10 );
 
-  Add=AddButton( MSGTR_Add,hbuttonbox1 );
-  Remove=AddButton( MSGTR_Remove,hbuttonbox1 );
-  Ok=AddButton( MSGTR_Ok,hbuttonbox1 );
-  Cancel=AddButton( MSGTR_Cancel,hbuttonbox1 );
+  Add=AddButton( _(MSGTR_Add),hbuttonbox1 );
+  Remove=AddButton( _(MSGTR_Remove),hbuttonbox1 );
+  Ok=AddButton( _(MSGTR_Ok),hbuttonbox1 );
+  Cancel=AddButton( _(MSGTR_Cancel),hbuttonbox1 );
 
   gtk_widget_add_accelerator( Cancel,"clicked",accel_group,GDK_Escape,0,GTK_ACCEL_VISIBLE );
 
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gtk/sb.c mplayer-svn-r26450/gui/mplayer/gtk/sb.c
--- mplayer-svn-r26450.orig/gui/mplayer/gtk/sb.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gtk/sb.c	2008-04-14 23:40:25 +0300
@@ -123,13 +123,13 @@
  accel_group = gtk_accel_group_new ();
 
  SkinBrowser=gtk_window_new( GTK_WINDOW_TOPLEVEL );
- gtk_widget_set_name( SkinBrowser,MSGTR_SkinBrowser );
- gtk_object_set_data( GTK_OBJECT( SkinBrowser ),MSGTR_SkinBrowser,SkinBrowser );
+ gtk_widget_set_name( SkinBrowser,_(MSGTR_SkinBrowser) );
+ gtk_object_set_data( GTK_OBJECT( SkinBrowser ),_(MSGTR_SkinBrowser),SkinBrowser );
  gtk_widget_set_usize( SkinBrowser,256,320 );
  gtk_container_set_border_width( GTK_CONTAINER( SkinBrowser ),1 );
  GTK_WIDGET_SET_FLAGS( SkinBrowser,GTK_CAN_DEFAULT );
  gtk_widget_set_events( SkinBrowser,GDK_EXPOSURE_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK | GDK_KEY_PRESS_MASK | GDK_KEY_RELEASE_MASK | GDK_FOCUS_CHANGE_MASK | GDK_STRUCTURE_MASK | GDK_PROPERTY_CHANGE_MASK | GDK_VISIBILITY_NOTIFY_MASK );
- gtk_window_set_title( GTK_WINDOW( SkinBrowser ),MSGTR_SkinBrowser );
+ gtk_window_set_title( GTK_WINDOW( SkinBrowser ),_(MSGTR_SkinBrowser) );
  gtk_window_set_position( GTK_WINDOW( SkinBrowser ),GTK_WIN_POS_CENTER );
  gtk_window_set_policy( GTK_WINDOW( SkinBrowser ),FALSE,FALSE,TRUE );
  gtk_window_set_wmclass( GTK_WINDOW( SkinBrowser ),"SkinBrowser","MPlayer" );
@@ -138,7 +138,7 @@
  gtkAddIcon( SkinBrowser );
 
  vbox5=AddVBox( AddDialogFrame( SkinBrowser ),0 );
- AddLabel( MSGTR_SKIN_LABEL,vbox5 );
+ AddLabel( _(MSGTR_SKIN_LABEL),vbox5 );
  AddHSeparator( vbox5 );
 
  scrolledwindow1=gtk_scrolled_window_new( NULL,NULL );
@@ -167,8 +167,8 @@
   gtk_button_box_set_layout( GTK_BUTTON_BOX( hbuttonbox4 ),GTK_BUTTONBOX_SPREAD );
   gtk_button_box_set_spacing( GTK_BUTTON_BOX( hbuttonbox4 ),10 );
 
- Ok=AddButton( MSGTR_Ok,hbuttonbox4 );
- Cancel=AddButton( MSGTR_Cancel,hbuttonbox4 );
+ Ok=AddButton( _(MSGTR_Ok),hbuttonbox4 );
+ Cancel=AddButton( _(MSGTR_Cancel),hbuttonbox4 );
 
  gtk_widget_add_accelerator( Ok,"clicked",accel_group,GDK_Return,0,GTK_ACCEL_VISIBLE );
  gtk_widget_add_accelerator( Cancel,"clicked",accel_group,GDK_Escape,0,GTK_ACCEL_VISIBLE );
diff -urN mplayer-svn-r26450.orig/gui/mplayer/gui_common.c mplayer-svn-r26450/gui/mplayer/gui_common.c
--- mplayer-svn-r26450.orig/gui/mplayer/gui_common.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/gui_common.c	2008-04-14 23:40:25 +0300
@@ -52,20 +52,20 @@
               av_strlcpy(tmp, guiIntfStruct.Filename, tmplen);
             if ( tmp[strlen( tmp ) - 4] == '.' ) tmp[strlen( tmp ) - 4]=0;
             if ( tmp[strlen( tmp ) - 5] == '.' ) tmp[strlen( tmp ) - 5]=0;
-           } else av_strlcpy( tmp,MSGTR_NoFileLoaded,tmplen );
+           } else av_strlcpy( tmp,_(MSGTR_NoFileLoaded),tmplen );
           break;
 #ifdef USE_DVDREAD
    case STREAMTYPE_DVD:
-          if ( guiIntfStruct.DVD.current_chapter ) snprintf(tmp,tmplen,MSGTR_Chapter,guiIntfStruct.DVD.current_chapter );
-            else av_strlcat( tmp,MSGTR_NoChapter,tmplen );
+          if ( guiIntfStruct.DVD.current_chapter ) snprintf(tmp,tmplen,_(MSGTR_Chapter),guiIntfStruct.DVD.current_chapter );
+            else av_strlcat( tmp,_(MSGTR_NoChapter),tmplen );
           break;
 #endif
 #ifdef HAVE_VCD
    case STREAMTYPE_VCD:
-        snprintf( tmp,tmplen,MSGTR_VCDTrack,guiIntfStruct.Track );
+        snprintf( tmp,tmplen,_(MSGTR_VCDTrack),guiIntfStruct.Track );
 	break;
 #endif
-   default: av_strlcpy( tmp,MSGTR_NoMediaOpened,tmplen );
+   default: av_strlcpy( tmp,_(MSGTR_NoMediaOpened),tmplen );
   }
  if ( c )
   {
diff -urN mplayer-svn-r26450.orig/gui/mplayer/menu.c mplayer-svn-r26450/gui/mplayer/menu.c
--- mplayer-svn-r26450.orig/gui/mplayer/menu.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/menu.c	2008-04-14 23:40:25 +0300
@@ -136,7 +136,7 @@
 #ifdef DEBUG
     mp_msg( MSGT_GPLAYER,MSGL_DBG2,"[menu.h] %s",MSGTR_NEMFMR );
 #endif
-   gtkMessageBox( GTK_MB_FATAL,MSGTR_NEMFMR );
+   gtkMessageBox( GTK_MB_FATAL,_(MSGTR_NEMFMR) );
    return;
   }
 
diff -urN mplayer-svn-r26450.orig/gui/mplayer/widgets.c mplayer-svn-r26450/gui/mplayer/widgets.c
--- mplayer-svn-r26450.orig/gui/mplayer/widgets.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/mplayer/widgets.c	2008-04-14 23:40:25 +0300
@@ -127,17 +127,17 @@
  switch( type)
   {
     case GTK_MB_FATAL:
-         gtk_window_set_title( GTK_WINDOW( MessageBox ),MSGTR_MSGBOX_LABEL_FatalError );
+         gtk_window_set_title( GTK_WINDOW( MessageBox ),_(MSGTR_MSGBOX_LABEL_FatalError) );
          gtk_widget_hide( WarningPixmap );
          gtk_widget_show( ErrorPixmap );
          break;
     case GTK_MB_ERROR:
-         gtk_window_set_title( GTK_WINDOW( MessageBox ),MSGTR_MSGBOX_LABEL_Error );
+         gtk_window_set_title( GTK_WINDOW( MessageBox ),_(MSGTR_MSGBOX_LABEL_Error) );
          gtk_widget_hide( WarningPixmap );
          gtk_widget_show( ErrorPixmap );
          break;
     case GTK_MB_WARNING:
-         gtk_window_set_title( GTK_WINDOW( MessageBox ),MSGTR_MSGBOX_LABEL_Warning );
+         gtk_window_set_title( GTK_WINDOW( MessageBox ),_(MSGTR_MSGBOX_LABEL_Warning) );
          gtk_widget_show( WarningPixmap );
          gtk_widget_hide( ErrorPixmap );
          break;
diff -urN mplayer-svn-r26450.orig/gui/skin/skin.c mplayer-svn-r26450/gui/skin/skin.c
--- mplayer-svn-r26450.orig/gui/skin/skin.c	2008-04-14 00:02:36 +0300
+++ mplayer-svn-r26450/gui/skin/skin.c	2008-04-14 23:40:25 +0300
@@ -41,7 +41,7 @@
  vsnprintf( p,512,format,ap );
  va_end( ap );
  mp_msg( MSGT_GPLAYER,MSGL_STATUS,MSGTR_SKIN_ERRORMESSAGE,linenumber,p );
- snprintf( tmp,512,MSGTR_SKIN_ERRORMESSAGE,linenumber,p );
+ snprintf( tmp,512,_(MSGTR_SKIN_ERRORMESSAGE),linenumber,p );
  gtkMessageBox( GTK_MB_FATAL,tmp );
 }
 
diff -urN mplayer-svn-r26450.orig/Makefile mplayer-svn-r26450/Makefile
--- mplayer-svn-r26450.orig/Makefile	2008-04-14 22:57:07 +0300
+++ mplayer-svn-r26450/Makefile	2008-04-14 23:40:25 +0300
@@ -425,6 +425,13 @@
 	@echo '// See the help/ subdir for the editable files.' >> help_mp.h
 	@echo '#ifndef MPLAYER_HELP_MP_H' >> help_mp.h
 	@echo '#define MPLAYER_HELP_MP_H' >> help_mp.h
+	@echo '#include "config.h"' >> help_mp.h
+	@echo '#ifdef ENABLE_NLS' >> help_mp.h
+	@echo '#include <libintl.h>' >> help_mp.h
+	@echo '#define _(x) gettext(x)' >> help_mp.h
+	@echo '#else' >> help_mp.h
+	@echo '#define _(x) (x)' >> help_mp.h
+	@echo '#endif' >> help_mp.h
 ifeq ($(CHARSET),)
 	@echo '#include "$(HELP_FILE)"' >> help_mp.h
 else
